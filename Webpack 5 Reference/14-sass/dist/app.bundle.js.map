{"version":3,"sources":["webpack://12-production/./src/index.js"],"names":["console","log","document","body","appendChild","element","createElement","text","createTextNode","component"],"mappings":"mBAwEAA,QAAQC,IAAI,oBAWZC,SAASC,KAAKC,YATd,WACE,MAAMC,EAAUH,SAASI,cAAc,MACjCC,EAAOL,SAASM,eAAe,eAIrC,OAFAH,EAAQD,YAAYG,GAEbF,EAGiBI,K","file":"app.bundle.js","sourcesContent":["/*\nWebpack - SASS\n--------------------------------------------------------------------------------\n\nLoading Sass / SCSS files\n1. Install dev dependencies sass-loader and sass (Dart Sass)\nnpm install sass-loader sass webpack --save-dev\n\nSetup for development mode\n--------------------------------------------------------------------------------\nLook at webpack.dev.js for configuration\n\nSetup for production mode\n--------------------------------------------------------------------------------\nFor production builds it's recommended to extract the CSS from your bundle being\nable to use parallel loading of CSS/JS resources later on.\n\n1. Install dev dependency mini-css-extract-plugin\nnpm install --save-dev mini-css-extract-plugin\n\n2. Configure the webpack.prod.js to use the mini-css-extract-plugin\nLook at webpack.prod.js for configuration\n\n\n\n\n\n\n\n\n\nCreating separate webpack configurations for the dev and production environments\n--------------------------------------------------------------------------------\n1. Install webpack-merge\nnpm install --save-dev webpack-merge\n\n2. Create webpack.common.js, webpack.dev.js and webpack.prod.js\n\n3. Create NPM scripts in the package.json\n\n\"start\": \"webpack serve --open --config webpack.dev.js\",\n\"build\": \"webpack --config webpack.prod.js\"\n\nSpecify the Mode\n--------------------------------------------------------------------------------\nMany libraries will key off the process.env.NODE_ENV variable to determine what\nshould be included in the library.\n\nSince webpack v4, specifying mode automatically configures DefinePlugin for you\nmaking the old way obsolete:\n\nnew webpack.DefinePlugin({\n      'process.env.NODE_ENV': JSON.stringify('production')\n    })\n\nMinification\n--------------------------------------------------------------------------------\nwebpack v4+ will minify your code by default in production mode using the TerserPlugin\n\nSource Mapping\n--------------------------------------------------------------------------------\nSpecifying (devtool: 'source-map') in production enables source maps which are useful\nfor debugging and running benchmark test.\n\nMinimize CSS\n--------------------------------------------------------------------------------\nTo minify the output, use a plugin like css-minimizer-webpack-plugin\nhttps://webpack.js.org/plugins/mini-css-extract-plugin/#minimizing-for-production\n*/\n\nimport './style.scss';\n\nconsole.log(`Mode: ${process.env.NODE_ENV}`)\n\nfunction component() {\n  const element = document.createElement('H1');\n  const text = document.createTextNode('SASS (SCSS)')\n\n  element.appendChild(text);\n\n  return element;\n}\n\ndocument.body.appendChild(component());\n"],"sourceRoot":""}